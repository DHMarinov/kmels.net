	private BinaryNode rebalance(BinaryNode nodeN)	{		int heightDifference = getHeightDifference(nodeN);				if (heightDifference > 1)		{ 	// left subtree is taller by more than 1			if (getHeightDifference((BinaryNode)nodeN.getLeftChild()) > 0)				// left subtree of left child is taller				nodeN = TreeRotations.rotateRight(nodeN);			else				nodeN = TreeRotations.rotateLeftRight(nodeN);		}		else if (heightDifference < -1)		{	// right subtree is taller by more than 1			if (getHeightDifference((BinaryNode)nodeN.getRightChild()) < 0)				// right subtree of right child is taller				nodeN = TreeRotations.rotateLeft(nodeN);			else				nodeN = TreeRotations.rotateRightLeft(nodeN);		} // end if		// else nodeN is balanced		return nodeN;	} // end rebalance