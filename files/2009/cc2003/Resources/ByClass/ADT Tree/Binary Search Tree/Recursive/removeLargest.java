/** Task: Removes the node containing the largest entry in a *  given tree. *  @param rootNode the root node of the tree * @return the root node of the revised tree */private BinaryNode removeLargest(BinaryNode rootNode){	if (rootNode.hasRightChild())	{		BinaryNode rightChild = (BinaryNode)rootNode.getRightChild();		BinaryNode root = removeLargest(rightChild);		rootNode.setRightChild(root);	}	else		rootNode = (BinaryNode)rootNode.getLeftChild();			return rootNode;} // end removeLargest