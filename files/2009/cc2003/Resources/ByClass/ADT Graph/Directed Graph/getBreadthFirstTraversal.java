public QueueInterface getBreadthFirstTraversal(Object origin){	resetVertices();	QueueInterface vertexQueue = new LinkedQueue();	QueueInterface traversalOrder = new LinkedQueue();	Vertex originVertex = (Vertex)vertices.getValue(origin);	originVertex.visit();	traversalOrder.enqueue(originVertex);	vertexQueue.enqueue(originVertex);		while (!vertexQueue.isEmpty())	{		Vertex frontVertex = (Vertex)vertexQueue.dequeue();		Iterator edges = frontVertex.getNeighborIterator();		while (edges.hasNext())		{			Edge edgeToNextNeighbor = (Edge)edges.next();			Vertex nextNeighbor = edgeToNextNeighbor.getEndVertex();			if (!nextNeighbor.isVisited())			{				nextNeighbor.visit();				traversalOrder.enqueue(nextNeighbor);				vertexQueue.enqueue(nextNeighbor);			} // end if		} // end while	} // end while		return traversalOrder;} // end getBreadthFirstTraversal