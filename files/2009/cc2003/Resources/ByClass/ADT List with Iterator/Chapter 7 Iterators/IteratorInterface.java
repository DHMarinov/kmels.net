import java.util.NoSuchElementException;public interface IteratorInterface extends BasicIteratorInterface{	public boolean hasCurrent();	public boolean advance();	public Object getCurrent() throws NoSuchElementException;	public void reset();	/** Task: Adds a new entry immediately after the current entry, 	 *        if one exists. 	 *  @param newEntry  the object that is the new entry	 *  @throws NoSuchElementException, if no current entry exists */	public void addAfterCurrent(Object newEntry)	                            throws NoSuchElementException;	/** Task: Removes the current entry, if one exists, and 	 *        advances the iteration to the next entry. 	 *  @throws NoSuchElementException, if no current entry exists */	public void removeCurrent() throws NoSuchElementException;	/** Task: Replaces the current entry with a new entry.	 *  @param newEntry  the object that replaces the current entry	 *  @throws NoSuchElementException, if no current entry exists */	public void replaceCurrent(Object newEntry)	                           throws NoSuchElementException;} // end IteratorInterface