public interface PriorityQueueInterface{	/** Task: Adds a new entry to the priority queue.	 *  @param newEntry  an object */	public void add(Comparable newEntry);	/** Task: Removes and returns the item with the highest priority.	 *  @return the object with the highest priority, or null 	 *          if the priority queue was empty */	public Comparable remove();	/** Task: Retrieves the item with the highest priority.	 *  @return the object with the highest priority, or null 	 *          if the priority queue is empty */	public Comparable get();	/** Task: Determines whether the priority queue is empty.	 *  @return true if the priority queue is empty */	public boolean isEmpty();	/** Task: Gets the size of the priority queue.	 *  @return the number of entries currently in the priority queue */	public int getSize();	/** Task: Removes all entries from the priority queue */	public void clear();} // end PriorityQueueInterface