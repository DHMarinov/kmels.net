// immutable classimport java.util.*; public class StockPurchase implements Comparable{	private int shares;	private double cost;	private Date date;		public StockPurchase(int numberOfShares, double costPerShare, Date purchaseDate)	{		shares = numberOfShares;		cost = costPerShare;		date = purchaseDate;	} // end constructor		public int getNumberOfShares()	{		return shares;	} // end getNumberOfShares		public double getCostPerShare()	{		return cost;	} // end getCostPerShare		public double getValue() 	{		return shares * cost;	} // end getValue		public Date getDate()	{		return date;	} // end getDate	public int compareTo(Object other)	{ // older stock is greater than newer stock		StockPurchase otherPurchase = (StockPurchase)other;		return -date.compareTo(otherPurchase.date);	} // end compareTo		public String toString()	{		return (new Integer(shares)).toString() + " " + (new Double(cost)).toString() + " " +				date.toString();		} // end toString } // end StockPurchase