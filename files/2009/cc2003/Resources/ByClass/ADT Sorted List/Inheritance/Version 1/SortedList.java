public class SortedList extends LList                        implements SortedListInterface{	public boolean add(Comparable newEntry)	{		int newPosition = Math.abs(getPosition(newEntry));		return super.add(newPosition, newEntry);	} // end add  	public boolean remove(Comparable anEntry)	{		int position = getPosition(anEntry);		// if position < 0, anEntry not in list		if (position > 0)			super.remove(position);					return position > 0;		} // end remove		public int getPosition(Comparable anEntry)	{		int position = 1;		int length = super.getLength();		while ( (position <= length) && (anEntry.compareTo(super.getEntry(position)) > 0) )		{				position++;		} // end while		if ( (position > length) || (anEntry.compareTo(super.getEntry(position)) != 0) )		{			position = -position;		} // end if				return position;	} // end getPosition	public boolean contains(Comparable anEntry)	{		return getPosition(anEntry) > 0;	} // end contains	public boolean add(int newPosition, Object newEntry)	{		throw new UnsupportedOperationException("Illegal attempt to " +			"add at a specified position within a sorted list.");		} // end add	public boolean replace(int givenPosition, Object newEntry)	{		throw new UnsupportedOperationException("Illegal attempt to " +			"replace an entry within a sorted list.");		} // end replace} // end SortedList