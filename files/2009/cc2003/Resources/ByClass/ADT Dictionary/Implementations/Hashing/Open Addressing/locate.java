/** @return either the index of the table location that references            the entry containing key or -1 if no such entry is found */private int locate(int index, Object key){	boolean found = false;	boolean repeatedIndex = false;	int firstIndex = index;	// first index in probe sequence	while ( !found && !repeatedIndex && (hashTable[index] != null) )	{		if ( hashTable[index].isIn() && key.equals(hashTable[index].getKey()) )			found = true; // key found		else // follow probe sequence			index = (index + 1) % hashTable.length; // linear probing		if (index == firstIndex)			repeatedIndex = true; // probe sequence is repeating	} // end while	// Assertion: either key is found or a null location is reached	int result = -1;	if (found)		result = index;	return result;} // end locate