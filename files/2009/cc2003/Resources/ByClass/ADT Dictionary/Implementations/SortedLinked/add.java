public Object add(Object key, Object value){	Object result = null;	Node newNode = new Node(key, value);  // create new node	Node currentNode = firstNode;	Node nodeBefore = null;	Comparable cKey = (Comparable) key;	// search chain until you either find a node containing key	// or pass the point where it should be	while ( (currentNode != null)			 && cKey.compareTo(currentNode.getKey()) > 0 )	{		nodeBefore = currentNode;		currentNode = currentNode.getNextNode();	} // end while	if ( (currentNode != null) && key.equals(currentNode.getKey()) )	{		result = currentNode.getKey();		currentNode.setValue(value);  // replace value	}	else if (isEmpty() || (nodeBefore == null))	{		newNode.setNextNode(firstNode);		firstNode = newNode;		currentSize++;	}	else // add elsewhere in non-empty list	{		newNode.setNextNode(currentNode);		nodeBefore.setNextNode(newNode);		currentSize++;	} // end if	return result;} // end add