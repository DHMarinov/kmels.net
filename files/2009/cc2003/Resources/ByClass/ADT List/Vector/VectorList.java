import java.util.Vector;public class VectorList implements ListInterface{	private Vector entry; // entries in list	public VectorList()	{		entry = new Vector();	} // end constructor	public VectorList(int initialSize)	{		entry = new Vector(initialSize);	} // end default constructor	public boolean add(Object newEntry)	{		entry.addElement(newEntry);		return true;	} // end add	public boolean add(int newPosition, Object newEntry)	{		boolean isSuccessful = true;		if ((newPosition >= 1) && (newPosition <= entry.size()+1)) 			entry.insertElementAt(newEntry, newPosition-1); 		else			isSuccessful = false;		return isSuccessful;	} // end add	public Object remove(int givenPosition)	{		Object result = null;  // return value		if ((givenPosition >= 1) && (givenPosition <= entry.size()))		{			result = entry.elementAt(givenPosition-1);			entry.removeElementAt(givenPosition-1);		} // end if		return result;	} // end remove	public void clear()	{		entry.removeAllElements();	} // end clear	public boolean replace(int givenPosition, Object newEntry)	{		boolean isSuccessful = true;		if ((givenPosition >= 1) && (givenPosition <= entry.size()))			entry.setElementAt(newEntry, givenPosition-1);		else			isSuccessful = false;					return isSuccessful;	} // end replace	public Object getEntry(int givenPosition)	{	  Object result = null;  // result to return	  	  if (givenPosition >= 1 && givenPosition <= entry.size())	     result = entry.elementAt(givenPosition-1);	  	  return result;	} // end getEntry	/* The methods contains, getLength, isEmpty, isFull and display are		STUDENT EXCERCISES. */	public boolean contains(Object anEntry)	{		return entry.contains(anEntry);	} // end contains	public int getLength()	{	  return entry.size();	} // end getLength	public boolean isEmpty()	{	  return entry.isEmpty();	} // end isEmpty	public boolean isFull()	{	  return false;	} // end isFull	public void display()	{	  for (int position = 1; position <= entry.size(); position++)	     System.out.println(getEntry(position));	} // end display} // end VectorList