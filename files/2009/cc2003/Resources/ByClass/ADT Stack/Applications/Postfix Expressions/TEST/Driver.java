import java.util.*;public class Driver {	public static void main(String[] args) 	{		System.out.println("Testing postfix expressions with\n" +		                   "a = 2, b = 3, c = 4, d = 5\n\n");		testPostfix("a+b");		testPostfix("(a + b) * c");		testPostfix("a * b / (c - d)");		testPostfix("a / b + (c - d)");		testPostfix("a / b + c - d");		testPostfix("a^b^c");		testPostfix("(a^b)^c");		testPostfix("a*(b/c+d)");		System.out.println("\n\nDone.");	}  // end main		public static void testPostfix(String infixExpression)	{		System.out.println("Infix:   " + infixExpression);		String postfixExpression =  Postfix.convertToPostfix(infixExpression);		System.out.println("Postfix: " + postfixExpression);		System.out.println("Value:   " + Postfix.evaluatePostfix(postfixExpression));		System.out.println("\n");	} // end testPostfix }  // end Driver/* OUTPUTTesting  postfix expressions witha = 2, b = 3, c = 4, d = 5Infix:   a+bPostfix: ab+Value:   5.0Infix:   (a + b) * cPostfix: ab+c*Value:   20.0Infix:   a * b / (c - d)Postfix: ab*cd-/Value:   -6.0Infix:   a / b + (c - d)Postfix: ab/cd-+Value:   -0.33333333333333337Infix:   a / b + c - dPostfix: ab/c+d-Value:   -0.33333333333333304Infix:   a^b^cPostfix: abc^^Value:   2.4178516392292583E24Infix:   (a^b)^cPostfix: ab^c^Value:   4096.0Infix:   a*(b/c+d)Postfix: abc/d+*Value:   11.5Done.*/