public class ArrayStack implements StackInterface, java.io.Serializable{	private Object [] stack; // array of stack entries	private int topIndex;    // index of top entry	private static final int DEFAULT_MAX_SIZE = 50;	public ArrayStack()	{		stack = new Object[DEFAULT_MAX_SIZE];		topIndex = -1;	} // end default constructor	public ArrayStack(int maxSize)	{		stack = new Object[maxSize];		topIndex = -1;	} // end constructor		public void push(Object newEntry)	{		topIndex++;		if (topIndex >= stack.length) // if array is full			doubleArray(); // expand array		stack[topIndex] = newEntry;	} // end push		public Object pop()	{		Object top = null;				if (!isEmpty())		{			top = stack[topIndex];			stack[topIndex] = null;			topIndex--; 		} // end if				return top;	} // end pop	public Object peek()	{		Object top = null;				if (!isEmpty())			top = stack[topIndex];				return top;	} // end peek	public boolean isEmpty()	{		return topIndex < 0;	} // end isEmpty		public void clear()	{		for (; topIndex > -1; topIndex--)			stack[topIndex] = null;	} // end clear	private void doubleArray()	{	   Object[] oldStack = stack;     // save reference to array of list entries	   int oldSize = oldStack.length; // save old max size of array	   	   stack = new Object[2*oldSize]; // double size of array	   	   // copy entries from old array to new, bigger array	   for (int index = 0; index < oldSize; ++index)	        stack[index] = oldStack[index];	} // end doubleArray	} // end ArrayStack