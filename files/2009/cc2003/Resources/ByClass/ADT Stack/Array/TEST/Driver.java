import java.util.*;public class Driver {	public static void main(String[] args) 	{		testStackOperations();		System.out.println("\n\nDone.");	}  // end main	public static void testStackOperations()	{		System.out.println("Create a stack: ");		StackInterface myStack = new ArrayStack();		System.out.println("\n\nisEmpty() returns " + myStack.isEmpty() + "\n");				System.out.println("Add to stack to get\n" +		                   "jerry jane jill jim jess joe\n");		myStack.push("joe");		myStack.push("jess");		myStack.push("jim");		myStack.push("jill");		myStack.push("jane");		myStack.push("jerry");		System.out.println("\nisEmpty() returns " + myStack.isEmpty() + "\n");		System.out.println("\n\nTesting peek and pop:\n");		while (!myStack.isEmpty())		{			String top = (String) myStack.peek();			System.out.println(top + " is at the top of the stack.");						top = (String) myStack.pop();			System.out.println(top + " is removed from the stack.\n");		} // end while		System.out.print("\nThe stack should be empty: ");		System.out.println("isEmpty() returns " + myStack.isEmpty() + "\n\n");		System.out.println("Add to stack to get\n" +		                   "jim jess joe\n");		myStack.push("joe");		myStack.push("jess");		myStack.push("jim");				System.out.println("\nTesting clear:\n");		myStack.clear();					System.out.println("\nisEmpty() returns " + myStack.isEmpty() + "\n\n");		System.out.println("Add to stack to get\n" +		                   "jim jess joe\n");		myStack.push("joe");		myStack.push("jess");		myStack.push("jim");		while (!myStack.isEmpty())		{			String top = (String) myStack.peek();			System.out.println(top + " is at the top of the stack.");						top = (String) myStack.pop();			System.out.println(top + " is removed from the stack.\n");		} // end while		System.out.print("\n\nThe stack should be empty: ");		System.out.println("isEmpty() returns " + myStack.isEmpty() + "\n");		System.out.println("myStack.peek() returns " +  myStack.peek());		System.out.println("myStack.pop() returns " +  myStack.pop() + "\n");	} // end testStackOperations}  // end Driver