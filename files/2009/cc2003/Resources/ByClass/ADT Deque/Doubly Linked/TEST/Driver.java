import java.util.*;public class Driver {	public static void main(String[] args) 	{		testDequeOperations();		System.out.println("\n\nDone.");	}  // end main	public static void testDequeOperations()	{		System.out.println("Create a deque: ");		DequeInterface myDeque = new LinkedDeque();		System.out.println("\n\nisEmpty() returns " + myDeque.isEmpty() + "\n");				System.out.println("Add to front and back of deque to get\n" +		                   "joe jess jim jill jane jerry\n");		myDeque.addToFront("jim");		myDeque.addToFront("jess");		myDeque.addToBack("jill");		myDeque.addToBack("jane");		myDeque.addToFront("joe");		myDeque.addToBack("jerry");		System.out.println("\nisEmpty() returns " + myDeque.isEmpty() + "\n");		System.out.println("\n\nTesting getFront, getBack, removeFront, removeBack:\n");		String front,  back;		front = (String) myDeque.getFront();		System.out.println(front + " is at the front of the deque.");				back = (String)myDeque.getBack();   		System.out.println(back + " is at the back of the deque.");							front = (String) myDeque.removeFront();		System.out.println(front + " is removed from the front of the deque.");				back = (String) myDeque.removeBack();		System.out.println(back + " is removed from the back of the deque.");				front = (String) myDeque.getFront();		System.out.println(front + " is at the front of the deque.");				back = (String)myDeque.getBack();   		System.out.println(back + " is at the back of the deque.");					System.out.println("\n\nTesting clear:\n");		myDeque.clear();		System.out.println("\nisEmpty() returns " + myDeque.isEmpty() + "\n\n");	} // end testDequeOperations}  // end Driver